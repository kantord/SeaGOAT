"""
This type stub file was generated by pyright.
"""

from . import base
from typing import TYPE_CHECKING, Union
from git.types import Literal
from git.repo import Repo
from git.util import Actor

""" Module containing all object based types. """
if TYPE_CHECKING: ...
__all__ = ("TagObject",)

class TagObject(base.Object):
    """Non-Lightweight tag carrying additional information about an object we are pointing to."""

    type: Literal[tag] = ...
    __slots__ = ...
    def __init__(
        self,
        repo: Repo,
        binsha: bytes,
        object: Union[None, base.Object] = ...,
        tag: Union[None, str] = ...,
        tagger: Union[None, Actor] = ...,
        tagged_date: Union[int, None] = ...,
        tagger_tz_offset: Union[int, None] = ...,
        message: Union[str, None] = ...,
    ) -> None:
        """Initialize a tag object with additional data

        :param repo: repository this object is located in
        :param binsha: 20 byte SHA1
        :param object: Object instance of object we are pointing to
        :param tag: name of this tag
        :param tagger: Actor identifying the tagger
        :param tagged_date: int_seconds_since_epoch
            is the DateTime of the tag creation - use time.gmtime to convert
            it into a different format
        :param tagged_tz_offset: int_seconds_west_of_utc is the timezone that the
            authored_date is in, in a format similar to time.altzone"""
        ...
