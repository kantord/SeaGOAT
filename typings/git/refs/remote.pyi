"""
This type stub file was generated by pyright.
"""

from .head import Head
from typing import Any, Iterator, NoReturn, TYPE_CHECKING, Union
from git.types import PathLike
from git.repo import Repo
from git import Remote

__all__ = ["RemoteReference"]
if TYPE_CHECKING: ...

class RemoteReference(Head):
    """Represents a reference pointing to a remote head."""

    _common_path_default = ...
    @classmethod
    def iter_items(
        cls,
        repo: Repo,
        common_path: Union[PathLike, None] = ...,
        remote: Union[Remote, None] = ...,
        *args: Any,
        **kwargs: Any
    ) -> Iterator[RemoteReference]:
        """Iterate remote references, and if given, constrain them to the given remote"""
        ...
    @classmethod
    def delete(cls, repo: Repo, *refs: RemoteReference, **kwargs: Any) -> None:
        """Delete the given remote references

        :note:
            kwargs are given for comparability with the base class method as we
            should not narrow the signature."""
        ...
    @classmethod
    def create(cls, *args: Any, **kwargs: Any) -> NoReturn:
        """Used to disable this method"""
        ...
