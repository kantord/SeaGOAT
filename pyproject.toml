[tool.poetry]
name = "seagoat"
version = "0.49.3"
description = "A semantic-code search engine"
authors = ["Daniel Kantor <git@daniel-kantor.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.scripts]
gt = "seagoat.cli:seagoat"
seagoat = "seagoat.cli:seagoat"
seagoat-server = "seagoat.server:server"

[tool.poetry.dependencies]
python = "^3.10, < 3.13"
chromadb = "^0.5.15"
gitpython = "^3.1.31"
tqdm = "^4.65.0"
appdirs = "^1.4.4"
click = "^8.1.3"
blessed = "^1.20.0"
pygments = "^2.15.1"
nest-asyncio = "^1.5.6"
requests = "^2.31.0"
setuptools = "^75.0.0"
psutil = "^6.0.0"
orjson = "^3.9.5"
waitress = "^3.0.0"
chardet = "^5.2.0"
pyyaml = "^6.0.1"
jsonschema = "^4.19.1"
deepmerge = "^1.1.0"
stop-words = "^2018.7.23"
flask = "^3.0.0"


[virtualenvs]
in-project = true
create = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pre-commit = "^4.0.0"
pyright = "^1.1.314"
pytest-watch = "^4.2.0"
freezegun = "^1.2.2"
syrupy = "^4.0.4"
pytest-asyncio = "^0.24.0"
ipython = "^8.14.0"
exceptiongroup = "^1.1.2"
pytest-mock = "^3.11.1"
pytest-fast-first = "^1.0.5"
pytest-testmon = "^2.0.12"
pytest-leaks = "^0.3.1"
mkdocs-material = "^9.1.19"
markdown-include = "^0.8.1"
python-semantic-release = "^9.0.0"
pytest-sugar = "^1.0.0"
pytest-profiling = "^1.7.0"
pytest-timeout = "^2.1.0"
psutil = "^6.0.0"
pytest-cov = "^5.0.0"
matplotlib = "^3.8.0"
ipykernel = "^6.25.2"
jupyterlab-widgets = "^3.0.9"
pandas = "^2.1.1"
locust = "^2.17.0"
pytest-clarity = "^1.0.1"
flask-basicauth = "^0.2.0"
ruff = "^0.7.0"

[tool.poetry.group.ev.dependencies]
seaborn = "^0.13.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = ".venv"
include = ["seagoat"]
exclude = ["**/node_modules", "**/__pycache__" ]
ignore = ["typings"]

reportMissingImports = false
reportMissingTypeStubs = false

pythonVersion = "3.11"
pythonPlatform = "Linux"
strict = []

executionEnvironments = [ { root = "src" } ]


[tool.semantic_release]
version_toml = [ "pyproject.toml:tool.poetry.version" ]
version_variables = [ "seagoat/__init__.py:__version__" ]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "pip install poetry && poetry build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.pytest.ini_options]
timeout = 15

[tool.ruff]
exclude = [
    "typings",
    ".venv"
]
