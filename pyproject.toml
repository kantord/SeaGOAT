[tool.poetry]
name = "seagoat"
version = "0.2.1"
description = "A semantic-code search engine"
authors = ["Daniel Kantor <git@daniel-kantor.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.scripts]
gt = "seagoat.cli:seagoat"
seagoat = "seagoat.cli:seagoat"
seagoat-server = "seagoat.server:server"

[tool.poetry.dependencies]
python = "^3.10"
chromadb = "^0.3.26"
gitpython = "^3.1.31"
tqdm = "^4.65.0"
appdirs = "^1.4.4"
click = "^8.1.3"
prompt-toolkit = "^3.0.38"
blessed = "^1.20.0"
pygments = "^2.15.1"
ripgrepy = "^2.0.0"
nest-asyncio = "^1.5.6"
flask = "^2.3.2"
requests = "^2.31.0"
setuptools = "^68.0.0"
psutil = "^5.9.5"

[virtualenvs]
in-project = true
create = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.2"
pylint = "^2.17.4"
black = "^23.3.0"
pre-commit = "^3.3.3"
pyright = "^1.1.314"
pytest-watch = "^4.2.0"
freezegun = "^1.2.2"
syrupy = "^4.0.4"
pytest-ordering = "^0.6"
pytest-asyncio = "^0.21.0"
ipython = "^8.14.0"
pytest-flask = "^1.2.0"
exceptiongroup = "^1.1.2"
pytest-timeout = "^2.1.0"
pytest-mock = "^3.11.1"
pytest-fast-first = "^1.0.5"
pytest-sugar = "^0.9.7"
pytest-testmon = "^2.0.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = ".venv"
include = ["seagoat"]
exclude = ["**/node_modules",
    "**/__pycache__",
]
ignore = ["typings"]

reportMissingImports = false
reportMissingTypeStubs = false

pythonVersion = "3.11"
pythonPlatform = "Linux"
strict = []

executionEnvironments = [
  { root = "src" }
]


[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "pip install poetry && poetry build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
